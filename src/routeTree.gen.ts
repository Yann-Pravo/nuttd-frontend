/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RootRouteImport } from './routes/root-route'
import { Route as PathsImport } from './routes/paths'
import { Route as LoginImport } from './routes/login'
import { Route as PublicRoutesImport } from './routes/PublicRoutes'
import { Route as PrivateRoutesImport } from './routes/PrivateRoutes'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const RootRouteRoute = RootRouteImport.update({
  path: '/root-route',
  getParentRoute: () => rootRoute,
} as any)

const PathsRoute = PathsImport.update({
  path: '/paths',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const PublicRoutesRoute = PublicRoutesImport.update({
  path: '/PublicRoutes',
  getParentRoute: () => rootRoute,
} as any)

const PrivateRoutesRoute = PrivateRoutesImport.update({
  path: '/PrivateRoutes',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/PrivateRoutes': {
      id: '/PrivateRoutes'
      path: '/PrivateRoutes'
      fullPath: '/PrivateRoutes'
      preLoaderRoute: typeof PrivateRoutesImport
      parentRoute: typeof rootRoute
    }
    '/PublicRoutes': {
      id: '/PublicRoutes'
      path: '/PublicRoutes'
      fullPath: '/PublicRoutes'
      preLoaderRoute: typeof PublicRoutesImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/paths': {
      id: '/paths'
      path: '/paths'
      fullPath: '/paths'
      preLoaderRoute: typeof PathsImport
      parentRoute: typeof rootRoute
    }
    '/root-route': {
      id: '/root-route'
      path: '/root-route'
      fullPath: '/root-route'
      preLoaderRoute: typeof RootRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  PrivateRoutesRoute,
  PublicRoutesRoute,
  LoginRoute,
  PathsRoute,
  RootRouteRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/PrivateRoutes",
        "/PublicRoutes",
        "/login",
        "/paths",
        "/root-route"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/PrivateRoutes": {
      "filePath": "PrivateRoutes.tsx"
    },
    "/PublicRoutes": {
      "filePath": "PublicRoutes.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/paths": {
      "filePath": "paths.ts"
    },
    "/root-route": {
      "filePath": "root-route.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
